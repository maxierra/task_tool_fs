<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Generar Tablas desde Textarea</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <style>
      .table-responsive {
        max-height: 100vh;
        overflow-x: auto;
      }

      table {
        margin-top: 20px;
        width: 100%;
        border-collapse: collapse;
      }

      th {
        background-color: #007bff;
        color: white;
        padding: 10px;
      }

      td {
        text-align: left;
        padding: 10px; /* Aumentar el padding para mayor espacio */
        border: 1px solid #007bff;
        white-space: nowrap; /* Mantiene el contenido en una línea */
        overflow: hidden;
        max-height: 60px; /* Aumentar la altura máxima */
        max-width: 200px; /* Aumentar el ancho máximo */
        text-overflow: ellipsis;
        cursor: pointer;
        transition: max-height 0.2s ease-in-out, max-width 0.2s ease-in-out;
      }

      td.expanded {
        white-space: normal; /* Permitir múltiples líneas */
        max-height: none; /* Sin límite en la altura */
        max-width: none; /* Sin límite en el ancho */
        overflow: visible; /* Mostrar contenido */
      }

      .case-container {
        border: 1px solid #007bff;
        border-radius: 5px;
        margin: 20px 0;
        padding: 10px;
      }

      .case-title {
        font-weight: bold;
        margin-bottom: 5px;
      }

      .table-title {
        margin-bottom: 10px;
        font-weight: bold;
      }

      .subtable {
        margin-bottom: 20px;
      }
    </style>
  </head>
  <body>
    <div class="container mt-4">
      <h2>Pegar Información para Crear Tablas</h2>
      <textarea
        id="dataInput"
        class="form-control mb-3"
        rows="10"
        placeholder="Pega tu información aquí..."
      ></textarea>
      <button class="btn btn-primary" onclick="generateTables()">
        Generar Tablas
      </button>
      <button class="btn btn-success" onclick="downloadReport()">
        Descargar Reporte HTML
      </button>

      <div class="table-responsive mt-4" id="containerTables"></div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <script>
      function generateTables() {
        const data = document.getElementById("dataInput").value;
        const containerTables = document.getElementById("containerTables");

        containerTables.innerHTML = "";

        if (!data.trim()) {
          alert("Por favor, ingresa algún dato.");
          return;
        }

        const rows = data.split("\n").filter((row) => row.trim());

        const headerGroups = [
          [
            "PROCESADA",
            "MENSAJE",
            "TIPOAUTORIZACION",
            "OBSERVACION",
            "FILENAME",
            "FILEPROCEFECHA",
            "ROWINFILE",
            "DE3",
            "DE4",
            "DE6",
            "DE24",
            "DE25",
            "DE38",
            "DE43",
            "DE49",
            "DE51",
            "DE63",
            "AUTOVISATID",
            "CTA_INFI",
            "AUTO_CODI",
            "AUTOFECHA",
            "CONSUFECHA",
            "CONSUMIPOR",
            "AUTOIMPOR",
            "ORIGEN_",
            "DIFERENCIA",
            "DE12",
            "DE48",
            "MOVIMID",
            "MOVIMTIPO",
          ],
          [
            "CUENTA",
            "ADICIONAL",
            "NUMEROTARJETA",
            "FECHA",
            "IMPORTE",
            "IMPORTECONFIRMADO",
            "INTERNACIONAL",
            "IMPORTEORIGINAL",
            "MONEDAORIGINAL",
            "PLAN",
            "CUOTAS",
            "CODIGOAUTORIZACION",
            "NUMEROCOMERCIO",
            "ESTADO",
            "FECHAESTADO",
            "RELACIONADA",
            "NROCUPON",
            "ORIGEN",
            "RECHAZO",
            "ICA",
            "TCC",
            "REGLAFRAUDE",
            "MODOENTRADA",
            "TERMINALPOS",
            "STANDIN",
            "IDAUTORIZACION",
            "ESTADOAUTOPOS",
            "IDTRANSACCION",
            "AUTOID",
            "AUTOCODI",
            "TIPOAUTO",
            "CONSUAUTOCODI",
            "FORZADA_MAMBU",
            "A_MAMBU",
            "RELA_OK",
            "ONL_OK",
            "AUTOFORZADA",
            "STATUSMAMBU",
            "MAMBULOGID",
            "RECALLID",
            "BIN",
            "CUENTAEXTERNA",
            "MONTOIMPACTADO",
            "FEEMAMBU",
            "MONEDAORIGEN",
            "VISATID",
            "ERRORCODE",
            "ERRORSOURCE",
            "ERRORREASON",
          ],
          ["REQUESTMESSAGECOMPLETE", "RESULTMESSAGECOMPLETE"],
        ];

        const allHeaders = headerGroups.flat();

        let chileCases = [];
        let peruCases = [];

        rows.forEach((row, index) => {
          const rowData = row.split("\t");
          const binIndex = allHeaders.indexOf("BIN");
          const binValue = rowData[binIndex] || "";

          if (binValue === "555505") {
            chileCases.push(rowData);
          } else if (binValue === "523510") {
            peruCases.push(rowData);
          }
        });

        const createCaseTable = (caseRow, caseIndex, title) => {
          const caseContainer = document.createElement("div");
          caseContainer.classList.add("case-container");

          const caseTitle = document.createElement("div");
          caseTitle.classList.add("case-title");
          caseTitle.textContent = `${title} ${caseIndex + 1}`;
          caseContainer.appendChild(caseTitle);

          const extraContainer = document.createElement("div");
          extraContainer.classList.add("mt-3");

          const cuentaExternaIndex = allHeaders.indexOf("CUENTAEXTERNA");
          const montoImpactadoIndex = allHeaders.indexOf("MONTOIMPACTADO");
          const mensajeIndex = allHeaders.indexOf("MENSAJE");

          const cuentaExterna = document.createElement("div");
          cuentaExterna.textContent = `CUENTAEXTERNA: ${
            caseRow[cuentaExternaIndex] || ""
          }`;
          extraContainer.appendChild(cuentaExterna);

          const montoImpactado = document.createElement("div");
          montoImpactado.textContent = `Monto: ${
            caseRow[montoImpactadoIndex] || ""
          }`;
          extraContainer.appendChild(montoImpactado);

          const mensaje = document.createElement("div");
          mensaje.textContent = `MENSAJE: ${caseRow[mensajeIndex] || ""}`;
          extraContainer.appendChild(mensaje);

          caseContainer.appendChild(extraContainer);

          headerGroups.reverse().forEach((group, groupIndex) => {
            const subtable = document.createElement("div");
            subtable.classList.add("subtable");

            const tableTitle = document.createElement("div");
            tableTitle.classList.add("table-title");
            tableTitle.textContent = `Tabla ${
              headerGroups.length - groupIndex
            }`;
            subtable.appendChild(tableTitle);

            const table = document.createElement("table");
            const thead = document.createElement("thead");
            const tbody = document.createElement("tbody");

            const headerRow = document.createElement("tr");
            group.forEach((header) => {
              const th = document.createElement("th");
              th.textContent = header;
              headerRow.appendChild(th);
            });
            thead.appendChild(headerRow);

            const tr = document.createElement("tr");
            group.forEach((header) => {
              const td = document.createElement("td");
              const dataIndex = allHeaders.indexOf(header);
              td.textContent = caseRow[dataIndex] || "";
              td.addEventListener("click", () => {
                td.classList.toggle("expanded");
              });
              tr.appendChild(td);
            });

            tbody.appendChild(tr);
            table.appendChild(thead);
            table.appendChild(tbody);
            subtable.appendChild(table);
            caseContainer.appendChild(subtable);
          });

          return caseContainer;
        };

        chileCases.forEach((caseRow, index) => {
          const caseTable = createCaseTable(caseRow, index, "Caso Chile");
          containerTables.appendChild(caseTable);
        });

        peruCases.forEach((caseRow, index) => {
          const caseTable = createCaseTable(caseRow, index, "Caso Perú");
          containerTables.appendChild(caseTable);
        });
      }

      function downloadReport() {
        const containerTables = document.getElementById("containerTables");
        const reportContent = containerTables.innerHTML;

        // Incluir el CSS en el contenido del reporte
        const fullReport = `
                <!DOCTYPE html>
                <html lang="es">
                <head>
                    <meta charset="UTF-8">
                    <meta name="viewport" content="width=device-width, initial-scale=1.0">
                    <title>Reporte Generado</title>
                    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
                    <style>
.table-responsive {
    max-height: 100vh;
    overflow-x: auto;
}

table {
    margin-top: 20px;
    width: 100%;
    border-collapse: collapse;
    font-size: 8px; /* Texto más pequeño para compactar la tabla */
}

th, td {
    padding: 5px; /* Mantener el padding reducido */
    border: 1px solid #007bff;
    text-align: left;
    vertical-align: top;
    word-wrap: break-word;
}

th {
    background-color: #007bff;
    color: white;
    font-size: 10px; /* Texto un poco más grande para el encabezado */
}

td {
    white-space: normal;
    max-width: 250px; /* Aumentar el max-width para evitar columnas muy verticales */
    overflow: hidden;
    text-overflow: ellipsis;
    line-height: 1.2; /* Ajustar el interlineado para hacer el texto más legible */
}

td.expanded {
    max-width: none; 
    white-space: normal;
    overflow: visible;
}

.case-container {
    border: 1px solid #007bff;
    border-radius: 5px;
    margin: 20px 0;
    padding: 10px;
}

.case-title {
    font-weight: bold;
    margin-bottom: 5px;
}

.table-title {
    margin-bottom: 10px;
    font-weight: bold;
}

.subtable {
    margin-bottom: 20px;
}
#table1 td {
    max-width: 300px; /* Un poco más de ancho solo para la tabla 1 */
}

                    </style>
                </head>
                <body>
                    <div class="container mt-4">${reportContent}</div>
                </body>
                </html>
            `;

        const blob = new Blob([fullReport], { type: "text/html" });
        const link = document.createElement("a");
        link.href = URL.createObjectURL(blob);
        link.download = "reporte.html";
        link.click();
      }
    </script>
  </body>
</html>
